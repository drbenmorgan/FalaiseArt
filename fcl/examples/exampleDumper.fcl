services: {
  message: {
    destinations: {
      Console: {
        type: cout
        threshold: DEBUG
      }
    }
  }
}

source: {
  module_type: FLExampleInputSource
  fileNames: ["foo.brio", "bar.brio"]
}

physics: {
  producers: {
    ALabel: {
      module_type: FLExampleProducer
      value: 1
    }

    BLabel: {
      module_type: FLExampleProducer
      message: "Hello from BLabel"
      value: 2
    }
  }

  myTriggerPath: [ ALabel, BLabel ]
  myOutputPath: [ DumpModule, GraphModule ]
}


# Use FileDumperOutput/DataFlowOutput
# See also EventIDFilter for how to limit what these output
outputs : {
  # For each event, print list of products
  # Remember to run `art --print-description FileDumperOutput`
  # for additional parameters that it can take.
  DumpModule: {
    module_type: FileDumperOutput
  }

  # For each event, produce a dot-format digraph of data
  # product origins. These are all output to file.
  # Remember to run `art --print-description DataFlowDumper`
  # for additional parameters that it can take.
  GraphModule: {
    module_type: DataFlowDumper
  }
}

